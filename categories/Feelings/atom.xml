<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Feelings | Chouqin & Laoqi]]></title>
  <link href="/categories/Feelings/atom.xml" rel="self"/>
  <link href="/"/>
  <updated>2013-04-21T10:45:38+08:00</updated>
  <id>/</id>
  <author>
    <name><![CDATA[emailliqiping1991@gmail.comweiboatchouqingithubchouqinnameQiping Li]]></name>
    
  </author>
  <generator uri="https://github.com/recurser/jekyll-plugins">Recurser</generator>

  
  <entry>
    <title type="html"><![CDATA[毕业论文点滴]]></title>
    <link href="/Feelings/2013/04/04/bachelor-thesis"/>
    <updated>2013-04-04T00:00:00+08:00</updated>
    <id>/Feelings/2013/04/04/bachelor-thesis</id>
    <content type="html"><![CDATA[<p></p>

<p>已经好久没写博客了，因为寒假一个多月都没看书，
而一回到学校，又要忙着毕业论文的事，所以也无暇顾及这个。
大部分牛人的博客，都是记载着自己正在研究的方面，
在博客中也是向读者传达着一些知识，我们总是可以从其中学到某种东西。
而我，要达到这样的程度要有很长的一段路需要走，
由于技术水平较低，现在的博客记录的仍然还是自己在<strong>学习</strong>过程中的一些心得和体会，
很大程度上是描述自己的坎坷经历，希望能给某些人一些借鉴，少走一些弯路。</p>

<p>好了，言归正传，这一个月，都在忙着做毕业设计，
包括看论文，写代码，找数据，做实验。一个月的时间，
就完成了这么一件事，效率确实不算高，
主要原因在于对于搞科研还是新手，
很多情况下都是在尝试了各种可能之后才找到方法，
有时一个人的蛮干还不如直接通过其他方式获得出路。
哎，科研就是要耐得住寂寞，不停地调参数，不停地跑数据，
把各种可能性都尝试一遍，之后才有好的结果。</p>

<p>先简单介绍一下我这个论文的要求，论文的题目叫
<code>信息缺失情况下的社区挖掘</code>，其实就是一个聚类算法，
根据节点的某些属性和节点之间的边的关系，把图中的比较接近的节点聚到一起，
形成一个社区。而信息缺失，是指节点中的某些边的关系并不知道，
在这样的情况下进行聚类。采用的办法是首先利用节点之间的属性和边的关系，
通过机器学习方法获取所有节点之间的距离，然后再根据这个距离对节点进行聚类。
下面我来说一下整个的过程。</p>

<p>首先是准备数据。一开始准备爬微博的数据，
所以就去网上搜各种微博的爬虫，
然后终于找到了这个<a href="https://bitbucket.org/chineking/weibocrawler">一个简单的分布式新浪微博爬虫</a>，
在这个基础上进行了一点小修改，弄了一个简单的单节点爬虫。
这个爬虫可以抓取用户的微博，用户的个人资料以及用户之间的关注关系。
然后，又使用<a href="http://ictclas.nlpir.org/">NLPIR</a>对微博进行分词，
提取出关键字作为用户的属性，同时以用户之间的关注关系作为边，这样就开始实验。
可是，不知道是实验室的网络不稳定还是新浪微博的限制，这个爬虫很难稳定地抓取微博的数据，
最后实在没办法，学长建议我去网上直接找别人爬取到的数据集。
于是，我先后使用了Google+, Facebook, 
Twitter(这三个数据集都是在<a href="http://snap.stanford.edu/data/">Stanford Large Network Dataset Collection</a>上找到的),
和Flixter数据集做实验。其中使用Flixter数据集做出来的结果也还可以，可是师兄说一定要有<strong>Ground Truth</strong>用于验证，
所以我又只好去找其他的数据集，
最后终于<a href="http://dmml.asu.edu/users/xufei/datasets.html">在这</a>找到了可以用于实验的数据集。</p>

<p>然后是实现代码去做实验。这个代码其实两部分，第一部分要利用机器学习去学习一个距离，
第二部分是基于距离进行聚类。为了学习距离，需要求解一个最优化函数，
而这里面涉及的数学的公式好复杂，实现起来也非常困难，
找到了一份和这个论文比较相似的论文的源代码，却发现里面错误好多，有些地方也不知道从哪里开始改。
大概修改了一下就把这个距离拿到第二步去聚类，发现结果非常差，
然后也不知道是第一步的问题还是第二步的问题，但是我就只会改第二步的代码:P。
终于在第二步实在找不出什么错误然后第一步的结果又不好之后，我去问老师，
老师让我使用谱聚类算法来验证距离是不是正确的，
因为谱聚类算法也是基于距离的聚类算法，如果谱聚类算法得不到正确的结果，那就是距离的问题了。
多好的主意啊，我当时怎么就没想到呢，因为我当时还没听说过谱聚类算法。
于是我就拿谱聚类算法去验证，果然是距离没学对，而除了代码没写对之外，
有一个重要的步骤没有做，<strong>对Feature做Normalize</strong>，
这个步骤对于使用节点的属性来说非常重要，它保证了所有属性的作用是均等的。
而后，我又在<a href="http://www.cs.cmu.edu/~liuy/distlearn.htm">这里</a>找到了一些其他的学习距离的算法，
我使用了其中的DCA算法来作为我的第一步，相当靠谱。
通过谱聚类算法验证之后，我发现我的第二步算法就几乎没有什么问题了，
跑出的结果也比较让人满意。</p>

<p>大概就是这么一个比较纠结的过程，总结出一些经验吧:</p>

<pre><code>&gt;&gt;&gt;import this
</code></pre>

<ol>
  <li>
    <p>写代码还是要多检查，一个bug除了导致几个小时的结果无效，还要浪费更多的时间去找到它。</p>
  </li>
  <li>
    <p>在一个步骤保证正确之前，不要急于开展下一步，这样只会增加更多的复杂性。</p>
  </li>
  <li>
    <p>沉下心来研究论文，尽量采用和别人一样的方法，得到的结果总是好些，虽然不知道为什么好。</p>
  </li>
  <li>
    <p>不要畏惧实验和失败，说不定下一次就是成功的那一次。</p>
  </li>
  <li>
    <p>真爱生命，远离科研。</p>
  </li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[再见2012，你好2013]]></title>
    <link href="/Feelings/2013/01/01/new-2013"/>
    <updated>2013-01-01T00:00:00+08:00</updated>
    <id>/Feelings/2013/01/01/new-2013</id>
    <content type="html"><![CDATA[<p></p>

<p>看着网络上各路牛人的年末总结，也想跟风自己来写一个，
只可惜拖的时间有点长，到现在才开始发表。</p>

<p>2012年对我来说绝对是不一样的一年，求职，面试，外推，实习，
以前对我来说很遥远的事情在这一年真真切切的发生。
有成功，也有失败，有欢笑，也有泪水，有面临抉择时的犹豫不决，
也有选择之后的淡定从容。这些经历，大多是艰辛的，
却没有将我击垮，能让自己觉得人生的充实。世界末日都照样过了，
还有什么挺不过呢？</p>

<p>在学习方面，2012年学习了很多新技术，新的语言，
对于算法，也有了更深入的理解。总的来说，还是广度有余，深度不足。
多多接触一些新的东西当然是有必要的，无论是对于开阔视野还是为了选择一个自己感兴趣的方向，
可是一个人必须要有所专长，在一个方面成为专家，这样才能体现个人的价值，
我在这方面仍然有所欠缺，希望在未来几年能够再某一个方面深入研究下去。
为什么是几年，因为我觉得有所建树，必须经过几年的积累。</p>

<p>在其他方面，相对来说就做得太少了一点，生活显得略微单调了一些。
空闲时间除了打打球，打打dota，似乎就没有干过别的什么事。更让我觉得愧疚的事，
很少看专业方面的其他书，思考的方式也越来越朝着计算机那个非0即1的方向去转了。
现在的情商好像是在下降，在2013年中一定要强迫自己多读书，多读与专业无关的书籍。</p>

<p>今年最好用的工具还是微博，在这上面可以很好地打发时间，
同时可以获取很多很有意思的信息。虽然说能学到的东西很少，
但它确实能很大程度地开阔视野，你能了解到很多你在现实生活中很难碰到的一些人和事。
喜欢微博，喜欢它带给我的快节奏信息。</p>

<p>今年最深的几点感触：</p>

<ol>
  <li>在面临选择时，不要过分地去权衡利弊，在做出选择之后坚定地超前走才是最重要的。</li>
  <li>不要固执地去争论一个观点的正确性，这并不是一个非黑即白的世界</li>
  <li>严于律己，宽以待人</li>
  <li>多看书，多思考，思考和学习一个都不能落下</li>
  <li>珍惜别人给自己的每一条建议</li>
</ol>

<p>2013 To-Do-List:</p>

<ol>
  <li>多看书，多感受生活，开阔自己的胸襟</li>
  <li>学习一门新的编程语言，可能是go或者erlang</li>
  <li>学完完有关数据挖掘的基础知识</li>
  <li>为github上的一个库提交代码</li>
</ol>

<p>祝愿我的亲人和朋友身体健康，考研的同学考上好的学校，
工作的同学工作顺心。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最近的总结与感悟]]></title>
    <link href="/Feelings/2012/10/27/feeling"/>
    <updated>2012-10-27T00:00:00+08:00</updated>
    <id>/Feelings/2012/10/27/feeling</id>
    <content type="html"><![CDATA[<p></p>

<h2>来由</h2>

<p>这段时间真的很忙，忙得都没时间好好看书，好好写博客。</p>

<p>每天都要上班，还要忙着保研的各种事情，有时还在保研和直接工作中纠结，
导致一有一点空闲时间，就什么事情也没想干了。</p>

<p>还好，现在这些事情也终于告一段落，也不用再去纠结什么了，终于可以静下心来
去做自己喜欢做的事，踏踏实实地学习某些东西了。</p>

<p>但是总结一番还是有点必要的，不然这些日子的纠结不是白费了吗。</p>

<!--more-->

<h2>我为什么选择读研</h2>

<p>其实这个星期的前两天还在纠结当中，可是就好像砸中牛顿的那个苹果一样，
某种东西突然在我的头脑中闪现，让我顿悟，这个东西就是：梦想。</p>

<p>梦想，别扯淡了，这年头谁还看中这个。</p>

<p>我看中，我认为一个人一旦失去了梦想，活着也就没有什么意思了。
能支持一个人不断向前，不断超越自己的动力，也只有梦想。</p>

<p>我的梦想又是什么呢？很简单，在自己所在的领域有所建树，然后把
这个领域的技术能够向前推动一点，哪怕只是一点。而这个简单的梦想，
仍需要很多的努力才能实现，我的希望是能够一直在这个努力的过程中，
不要因为其他的东西的干扰而偏离了梦想。</p>

<p>而我差点因为微软的offer而偏离，极高的工资，舒适的工作环境，做的却
不是自己喜欢做的事。我明白，相对于其他在微软实习或者工作的人来说，
我还是相差太远。他们都是计算机竞赛的佼佼者，身上顶着各种光环，在计算机方面的积累比我
多了好几年，单就他们做过的题，我可能一辈子都来不及做完。我现在的学的东西也不是很扎实，
什么都知道一点，可都不精，如果再在微软待下去，或许就会沉浸在这种安逸的生活中，无法再
往一个更高的方向发展了。对于正值奋斗年华的我来说，过分的安乐真的不是什么好事。
而且在微软做的不是我喜欢做的事，要想突破感觉还是太难了。</p>

<p>那为什么不把工作当成白天的事，然后空闲时间去做自己喜欢做的事呢？我也考虑过这个问题，
最后发现这很难成功。因为这样每天最多能花两个小时在自己喜欢做的事情上面，而同时可能会
有各种事情打乱你的计划，想对于正式工作的每天八小时，这其中的差距可想而知。在互联网这样一个
高速发展的行业，低速成长是很容易被淘汰的，这样的过程，最多持续半年，我想就会终止，然后渐渐地
开始沦落为毫无激情的上班族。能够通过用这种方式坚持的，至少在中国我还没有听说过。</p>

<p>所以，我还需要很多的积累，扎实地磨练技术，同时更加开阔自己的眼界，而这些，通过研究生的三年，能够做到。</p>

<h2>对自己目前的定位</h2>

<p>总的来说，就是接触了很多的东西，但没有什么谈得上精通。</p>

<h3>语言</h3>

<p>语言确实用过很多，上过两个学期的C++课程，用C++写了数据结构的作业和USACO上的一些题，对于C++，应该算是最
熟悉的语言之一了吧，它的语法，还有很多相关的概念，包括虚函数，多态等等，都已经掌握了。可是不能算精通，对于它
的掌握仅仅局限于课堂，没用过STL,看过的书也就只有《C++ Primer》一本（教材除外），也没用它开发过大型的项目，对于
C++这样一门庞大的语言来说，这些还远远不够。</p>

<p>关于C，也就用它写过操作系统的大作业，对于Unix环境下的C编程有一定的了解，现在如果要用C写一个大型的项目的话，
应该也没有什么问题，但如果要称得上是精通，还需要大量的练习才行。</p>

<p>关于php，python，现在在上班的时候用得比较多，也正在处于一个水平稳步上升的阶段，我想经过一年的积累，这两门语言应该
是能够相当熟练，甚至是精通。</p>

<p>关于javascript，CSS(如果它也算语言的话)，基本的语法也都知道，可是积累还远远不够，特别是javascript，这门上手容易，精通确
很难的语言，因为工作主要偏后端，所以熟练程度还是不够。</p>

<p>关于C#，用它做过几个项目，用了WPF,ASP.NET，感觉C#这门语言还是比较容易上手的，写起代码来也很方便，配合上VS这个强大的IDE，
开发还是挺快的。我对它的了解还比较基础，至于它的反射，Delegation，Event等等东西，只是清楚概念，没有实际使用过。</p>

<p>另外，我上过程序设计语言这门课程，在这门课程中，我接触了大量的语言，也用这些语言写过程序。
使用过Java，Perl,Scheme,Haskell,Prolog这些语言。值得一提的是，scheme和prolog我都写过好几个程序，
虽然这两门语言都比较奇怪，但是写程序时确实能够开阔思路，还是两门比较有趣的语言，我比较喜欢。</p>

<p>对于“语言之争”，我没有特别的看法，我也没有特别的感觉说只用某一门语言或者只喜欢某一种语言。我觉得在不同的领域，
不同的场景，可能有些语言比另外一些语言要适合一些，比如说开发系统级别的应用程序，对执行效率要求比较高，这样，
C或者C++可能要适合一些，又比如一些做一些自动事情的脚本，可能python或者php用起来更加方便一些。每个语言都有它的
优点，对于语言我还是没有什么挑剔。</p>

<h3>专业基础知识</h3>

<p>对于专业知识，大部分都只限于课程，都是通过教材来了解，虽然这些教材都是国外的经典教材，
可是我觉得我们利用的还是太少了，大家都平时没怎么认真学习，然后到了考试，老师会给出几个
重点，然后大家根据这几个重点复习，应付考试而已。这些经典的教材，又岂是短短的这几天能够
掌握的？而我也不过是把这几天的时间分配到了整个学期而已，也就是说，我会跟着老师的上课进度，
把这些教材看一遍，看得有多深入，浅尝辄止罢了，粗粗地过完内容，然后总结一下了事。掌握得不是很扎实，
导致成绩也不是很好。专业基础课中，掌握得比较扎实的应该算操作系统和编译原理了吧，因为这两门课都做过
课程设计，多多少少需要了解一些东西。另外数据库也算把教材看得比较透彻的一门课，虽然考试成绩不咋的。</p>

<h3>算法</h3>

<p>只是知道常见几种算法:贪心法，分治法，动态规划。数据结构了解了：数，堆，哈希表，图，以及图的遍历，
最小生成树，最短路径。对于算法来说，和那些比较厉害的人的差距就在于：练习不够。别人能够做到各种算法
烂熟于胸，看到某类问题立刻想到相关的算法，因为什么，就是练习了那么多，一个问题做上10几遍，怎么能不熟。
所以在算法方面，我还得勤加练习，不然只能维持在现在的，看上去都会的水平。说现在找工作只看算法有点绝对，但
只要算法好想找任何工作是绝对没有问题的，各种经历告诉我这个观点的正确性。另外，在此提醒自己，《算法导论》
一定要坚持看完了，给自己下定一个决心吧。</p>

<h3>技术之外</h3>

<p>首先是表达能力有待增强，把自己清楚的东西讲到让别人也清楚这确实是一种艺术。写博客是一种很好的锻炼自己表达
能力的手段，所以我会经常把自己对技术的感悟通过写博客的方式表达出来，同时也分享了东西给大家。</p>

<p>其次是提高英语的口语能力，多说，多听。</p>

<h2>规划</h2>

<p>在研究生的三年中，我需要达到下面的目标：</p>

<ul>
<li>执行力：下定决心去做好每一件事</li>
<li>了解自己研究方向：数据挖掘的方方面面，达到一个比较高的级别</li>
<li>算法能力再提升一个档次，把算法从劣势转为优势</li>
<li>对于大数据，云计算，虚拟化有比较深入的了解</li>
</ul>

<p>目标并不多，也不是很远大，但仍然需要认真地去执行。</p>

<p>另外，希望在这将近一年的实习生涯中达到下面的目标：</p>

<ul>
<li>精通php,python</li>
<li>对mysql性能优化有完整的理解和解决方案</li>
</ul>

<h2>结语</h2>

<p>前方路已经越发明朗了，接下来就是坚定地走下去。</p>
]]></content>
  </entry>
  
</feed>